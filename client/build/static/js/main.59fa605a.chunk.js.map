{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/UserAuthentication/RegisterModal.js","components/UserAuthentication/LoginModal.js","components/UserAuthentication/Logout.js","components/Navbars/AppNavbar.js","actions/itemActions.js","components/List Groups/ShoppingList.js","components/Modals/ItemModal.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","utils/API.js","components/Cards/RecipeCard.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","ShoppingList","onDeleteClick","deleteItem","getItems","items","item","ListGroup","TransitionGroup","map","_id","CSSTransition","key","timeout","classNames","ListGroupItem","size","bind","get","delete","ItemModal","newItem","addItem","marginBottom","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Axios","RecipeCard","recipe","API","console","log","title","Card","bg","text","width","Header","Body","Title","Text","calories","ingredients","ing","ingredient","measure","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59fa605a.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./types\";\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Name\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { register, clearErrors })(\n  RegisterModal\n);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Login\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href=\"#\">\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(null, { logout })(Logout);\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  //NavLink,\n  Container\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegisterModal from \"../UserAuthentication/RegisterModal\";\nimport LoginModal from \"../UserAuthentication/LoginModal\";\nimport Logout from \"../UserAuthentication/Logout\";\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className=\"navbar-text mr-3\">\n            <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">Final Project</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);\n","import axios from \"axios\";\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addItem = item => (dispatch, getState) => {\n  axios\n    .post(\"/api/items\", item, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n","import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass ShoppingList extends Component {\n  static propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n\n  render() {\n    const { items } = this.props.item;\n    return (\n      <Container>\n        <ListGroup>\n          <TransitionGroup className=\"shopping-list\">\n            {items.map(({ _id, name }) => (\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  {this.props.isAuthenticated ? (\n                    <Button\n                      className=\"remove-btn\"\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={this.onDeleteClick.bind(this, _id)}\n                    >\n                      &times;\n                    </Button>\n                  ) : null}\n                  {name}\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass ItemModal extends Component {\n  state = {\n    modal: false,\n    name: \"\"\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      name: this.state.name\n    };\n\n    // Add item via addItem action\n    this.props.addItem(newItem);\n\n    // Close modal\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.isAuthenticated ? (\n          <Button\n            color=\"dark\"\n            style={{ marginBottom: \"2rem\" }}\n            onClick={this.toggle}\n          >\n            Add Item\n          </Button>\n        ) : (\n          <h4 className=\"mb-3 ml-4\">Please log in to manage items</h4>\n        )}\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"item\">Item</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  placeholder=\"Add shopping item\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Add Item\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport itemReducer from \"./itemReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  item: itemReducer,\n  error: errorReducer,\n  auth: authReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import Axios from \"axios\";\n\nexport default {\n  // Gets all movies\n  getMovies: function() {\n    return Axios.get(\"/api/movie\");\n  },\n  // Gets the movie with the given id\n  getMovie: function(id) {\n    return Axios.get(\"/api/movie/\" + id);\n  },\n  // Deletes the movie with the given id\n  deleteMovie: function(id) {\n    return Axios.delete(\"/api/movie/\" + id);\n  },\n  // Saves a movie to the database\n  saveMovie: function(movieData) {\n    return Axios.post(\"/api/movie\", movieData);\n  },\n  // Gets a random recipe\n  getRandomRecipe: function() {\n    return Axios.get(\"/api/recipe\");\n  }\n};\n","import React, { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport API from \"../../utils/API\";\r\n\r\nexport default class RecipeCard extends Component {\r\n  state = {\r\n    recipe: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getRandomRecipe()\r\n      .then(res => {\r\n        this.setState({ recipe: res.data });\r\n        console.log(this.state);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return this.state.recipe.title ? (\r\n      <Card bg=\"info\" text=\"white\" style={{ width: \"28rem\" }}>\r\n        <Card.Header>Recipe!</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{this.state.recipe.recipe.title}</Card.Title>\r\n          <Card.Text>\r\n            Calories: {this.state.recipe.recipe.calories}\r\n            <br />\r\n          </Card.Text>\r\n\r\n          <div>Ingredients:</div>\r\n          <ul>\r\n            {this.state.recipe.recipe.ingredients.map(ing => (\r\n              <li key={ing.key}>\r\n                {ing.ingredient} - {ing.measure ? ing.measure : \"\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <Card.Text>{this.state.recipe.recipe.ingredients}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    ) : (\r\n      <div>still loading...</div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport AppNavbar from \"./components/Navbars/AppNavbar\";\nimport ShoppingList from \"./components//List Groups/ShoppingList\";\nimport ItemModal from \"./components/Modals/ItemModal\";\nimport { Container } from \"reactstrap\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport RecipeCard from \"./components/Cards/RecipeCard\";\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <ItemModal />\n            <ShoppingList />\n            <RecipeCard />\n          </Container>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}